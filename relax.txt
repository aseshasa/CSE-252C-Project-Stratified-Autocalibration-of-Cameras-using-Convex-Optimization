function [HEye, Hqa, p] = affineupgrade(anim, tolerance)
nFrame = anim.nFrame;
cvx_solver sedumi;
[HEye, Hqa, l, u, P] = chiralineq(anim);

P11=squeeze(P(1,1,:));
P12=squeeze(P(1,2,:));
P13=squeeze(P(1,3,:));
P14=squeeze(P(1,4,:));
P21=squeeze(P(2,1,:));
P22=squeeze(P(2,2,:));
P23=squeeze(P(2,3,:));
P24=squeeze(P(2,4,:));
P31=squeeze(P(3,1,:));
P32=squeeze(P(3,2,:));
P33=squeeze(P(3,3,:));
P34=squeeze(P(3,4,:));
alpha = -[ P14, P24, P34, - P33 - P22 - P11 ];
beta = [ P12.*P24 + P34.*P13 - P33.*P14  - P14.*P22, P34.*P23 - P11.*P24 + ...
  P14.*P21 - P33.*P24, - P11.*P34 - P34.*P22 + P32.*P24 + P14.*P31, P11.*P33 + ...
  P11.*P22 - P12.*P21 + P33.*P22 - P32.*P23 - P13.*P31 ];
gamma = -[ P34.*P12.*P23 - P34.*P13.*P22 - P33.*P12.*P24 - P32.*P14.*P23 + ...
  P33.*P14.*P22 + P32.*P13.*P24, -P11.*P34.*P23 + P34.*P13.*P21 + P11.*P33.*P24 - ...
  P33.*P14.*P21 - P13.*P24.*P31 + P14.*P23.*P31, P11.*P34.*P22 - P34.*P12.*P21 - ...
  P11.*P32.*P24 + P32.*P14.*P21 + P12.*P24.*P31 - P14.*P22.*P31, P33.*P12.*P21 - ...
  P11.*P33.*P22 + P11.*P32.*P23 - P32.*P13.*P21 - P12.*P23.*P31 + P13.*P22.*P31 ];
data.aH = alpha*Hqa';
data.bH = beta*Hqa';
data.cH = gamma*Hqa';
data.dH = ones(size(data.aH,1),1)*Hqa(:,4)';
data.l = l(1:3); data.u = u(1:3);
data.qstar = (l(1:3)+u(1:3))/2;
data.phi = -Inf;
data.phi_lb = -Inf;
data.isref = false;
hand1 = @(x)costfunc(x,data.aH,data.bH,data.cH,data.dH);
data = refine(hand1, data);
hand2 = @(x,y)eqn21(data.aH, data.bH, data.cH, data.dH, x, y);
data = branchandbound(hand2, hand1, data, tolerance);
% [data.phi, data.phi_lb, data.qstar] = eqn21(data.aH, data.bH, data.cH, data.dH, data.l, data.u);
[~, idx] = min(data.phi);
p=Hqa'*[data.qstar(:,idx);1];
p=p(1:3)/p(4);
end

function [phi, phi_lb, v] = eqn21(aH, bH, cH, dH, l, u)
m = size(aH,1);
vbd = reshape([l, u; 1 1],1,4,2);
abd = sum(sort(bsxfun(@times, aH, vbd),3),2);
bbd = sum(sort(bsxfun(@times, bH, vbd),3),2);
cbd = sum(sort(bsxfun(@times, cH, vbd),3),2);
dbd = sum(sort(bsxfun(@times, dH, vbd),3),2);
a_l = abd(:,:,1);
a_u = abd(:,:,2);
b_l = bbd(:,:,1);
b_u = bbd(:,:,2);
c_l = cbd(:,:,1);
c_u = cbd(:,:,2);
d_l = dbd(:,:,1);
d_u = dbd(:,:,2);
cvx_begin sdp quiet
	variables v(3) r e f(m,1) g(m,1) tf1(m,1) tg1(m,1) tf2(m,2) tg2(m,2);
	minimize(r);
	subject to
		a = aH*[v;1];
		b = bH*[v;1];
		c = cH*[v;1];
		d = dH*[v;1];
		{d(1),e} <In> conc_relax_x83(d(1), d_l(1), d_u(1), e);
		l <= v <= u;
		r >= 0;
		e >= 0;
		{[2.*(f - g); r-e], r+e} <In> lorentz(m+1);
		{f,c,a,tf1,tf2} <In> x13y_relax(f, c, c_l, c_u, a, a_l, a_u, tf1, tf2);
		{g,d,b,tg1,tg2} <In> x13y_relax(g, d, d_l, d_u, b, b_l, b_u, tg1, tg2);
cvx_end
cvx_clear;
phi_lb = r;
phi = costfunc(v, aH, bH, cH, dH);
end

function ret = conc_relax_x83(x, xl, xu, z)
cvx_begin
	subject to
		z <= nthroot(xl,3).^8+(x-xl).*((nthroot(xu,3).^8-nthroot(xl,3).^8)./(xu-xl));
cvx_end
ret = {x,z};
end

function ret=x13y_relax(z,x,xl,xu,y,yl,yu,t,t1)
cvx_begin
	subject to
		{z,x,y,t1(:,1)} <In> x13y_relax_case1(z,x,xl,xu,y,yl,yu,t1(:,1));
		{-z,x,-y,t1(:,2)} <In> x13y_relax_case1(-z,x,xl,xu,-y,-yu,-yl,t1(:,2));
		{x,t} <In> x13y_relax_case2(x,xl,xu,t);
		{-x,-t} <In> x13y_relax_case2(-x,-xu,-xl,-t);
		ind=(xl<=0) & (0<=xu);
		if nnz(ind)>=1
		  {z(ind),t(ind),y(ind)} <In> bilin_relax(z(ind),t(ind),nthroot(xl(ind),3),...
			nthroot(xu(ind),3),y(ind),yl(ind),yu(ind));
		end
cvx_end
ret = {z,x,y,t,t1};
end

function ret=x13y_relax_case1(z,x,xl,xu,y,yl,yu,t1)
cvx_begin
	subject to
		ind=(xl>0);
		if nnz(ind) >= 1
			{z(ind),x(ind),y(ind),t1(ind)} <In> y_relax_all(z(ind),x(ind),xl(ind),xu(ind),y(ind),...
			yl(ind),yu(ind),t1(ind));
		end
		ind=(xu<0);
		if nnz(ind) >= 1
			{z(ind),-x(ind),-y(ind),t1(ind)} <In> y_relax_all(z(ind),-x(ind),-xu(ind),-xl(ind),-y(ind),...
			-yu(ind),-yl(ind),t1(ind));
		end
cvx_end
ret = {z,x,y,t1};
end

function ret=y_relax_all(z,x,xl,xu,y,yl,yu,t1)
cvx_begin
	subject to
		ind=(0<yl);
		if nnz(ind) >= 1
			{z(ind),x(ind),y(ind)} <In> y_relax_Case1(z(ind),x(ind),xl(ind),xu(ind),...
			y(ind),yl(ind),yu(ind));
		end
		ind=(yl<0) & (0<yu);
		if nnz(ind) >= 1
			{z(ind),x(ind),y(ind)} <In> y_relax_Case2(z(ind),x(ind),xl(ind),xu(ind),...
			y(ind),yl(ind),yu(ind));
		end
		ind=(yu<0);
		if nnz(ind) >= 1
			{z(ind),x(ind),y(ind),t1(ind)} <In> y_relax_Case3(z(ind),x(ind),xl(ind),xu(ind),...
			y(ind),yl(ind),yu(ind),t1(ind));
		end
cvx_end
ret = {z,x,y,t1};
end

function ret=y_relax_Case1(z,x,xl,xu,y,yl,yu)
cvx_begin
	subject to
		lam = 1./(xu-xl).*x-1./(xu-xl).*xl;
		k = nthroot(xl,3)-nthroot(xu,3);
		m = nthroot(xu,3).*y;
		z >= k.*yu - lam.*(k.*yu) + m;
		z >= k.*y - lam.*(k.*yl) + m;
cvx_end
ret = {z,x,y};
end

function ret=y_relax_Case2(z,x,xl,xu,y,yl,yu)
k=(nthroot(xl,3)-nthroot(xu,3)).*yu./(xl-xu);
m=(nthroot(xu,3).*xl-nthroot(xl,3).*xu).*yu./(xl-xu);
xl23 = 1/3*nthroot(xl,3).^(-2);
xu23 = 1/3*nthroot(xu,3).^(-2);
xl13 = 2/3*nthroot(xl,3);
xu13 = 2/3*nthroot(xu,3);
ze=zeros(size(xl,1),1);
on=ones(size(xl,1),1);
lam=bsxfun(@rdivide,[ze,on,-yl],yu-yl);
oneMinusLam=[ze,ze,on]-lam;
cvx_begin
	subject to
		for t1={ oneMinusLam.*[xu,xu,xu], [on,ze,ze]-lam.*[xl,xl,xl] }
			for t2={ [xl23,xl23,xl23].*t1{:} + oneMinusLam.*[xl13,xl13,xl13], ...
			  [xu23,xu23,xu23].*t1{:} + oneMinusLam.*[xu13,xu13,xu13] }
				expr=t2{:}.*[yl,yl,yl] + [k,k,k].*([on,ze,ze]-t1{:})+lam.*[m,m,m];
				z >= expr(:,1).*x + expr(:,2).*y + expr(:,3);
			end
		end
cvx_end
ret = {z,x,y};
end

function ret=y_relax_Case3(z,x,xl,xu,y,yl,yu,t1)
a=1./(yu-yl); lam=a.*y-a.*yl;
lamxl=lam.*xl; lamxu=lam.*xu;
xl23 = 1/3*nthroot(xl,3).^(-2);
xu23 = 1/3*nthroot(xu,3).^(-2);
xl13 = 2/3*nthroot(xl,3);
xu13 = 2/3*nthroot(xu,3);
cvx_begin
	subject to
		xl - lamxl <= t1;
		t1 <= xu - lamxu;
		lamxl <= x - t1;
		x - t1 <= lamxu;
		z >= (yl.*xl23).*t1+(1-lam).*(yl.*xl13) + (yu.*xl23).*(x-t1)+lam.*(yu.*xl13);
		z >= (yl.*xl23).*t1+(1-lam).*(yl.*xl13) + (yu.*xu23).*(x-t1)+lam.*(yu.*xu13);
		z >= (yl.*xu23).*t1+(1-lam).*(yl.*xu13) + (yu.*xl23).*(x-t1)+lam.*(yu.*xl13);
		z >= (yl.*xu23).*t1+(1-lam).*(yl.*xu13) + (yu.*xu23).*(x-t1)+lam.*(yu.*xu13);
cvx_end
ret = {z,x,y,t1};
end

function ret=x13y_relax_case2(x,xl,xu,t)
cvx_begin
	subject to
		ind=(xl<=0) & (0<=xu) & (-xu/8>xl);
		if nnz(ind)>=1
			xl23 = 1/3*nthroot(xl(ind),3).^(-2);
			xl13 = 2/3*nthroot(xl(ind),3);
			t(ind)>=(nthroot(xu(ind),3).^(-2)*4/3.*(x(ind)-xu(ind))+nthroot(xu(ind),3));
			t(ind)>=xl23.*x(ind)+xl13;
		end
		ind=(xl<=0) & (0<=xu) & (-xu/8<=xl);
		if nnz(ind)>=1
			xl23=(nthroot(xu(ind),3)-nthroot(xl(ind),3))./(xu(ind)-xl(ind));
			xl13=(xu(ind).*nthroot(xl(ind),3)-xl(ind).*nthroot(xu(ind),3))./...
			(xu(ind)-xl(ind));
			t(ind) >= xl23.*x(ind)+xl13;
		end
cvx_end
ret = {x,t};
end

function ret = bilin_relax(z,x,xl,xu,y,yl,yu)
cvx_begin
	subject to
		z <= xu.*y + yl.*x - xu.*yl;
		z <= xl.*y + yu.*x - xl.*yu;
		z >= xl.*y + yl.*x - xl.*yl;
		z >= xu.*y + yu.*x - xu.*yu;
cvx_end
ret = {z,x,y};
end

function [res,grad]=costfunc(v, aH, bH, cH, dH)
v(4,:)=1;
a = aH*v;
b = bH*v;
c13 = nthroot(cH*v, 3);
d13=nthroot(dH*v,3);
res=sum((c13.*a-bsxfun(@times,d13,b)).^2,1)./d13(1).^8;
grad=[];
if nargout==2;
  deriv1=(bsxfun(@times,1/3*c13.^(-2).*a,cH(:,1:3))+...
    bsxfun(@times,c13,aH(:,1:3))-...
    bsxfun(@times,1/3*d13.^(-2).*b,dH(:,1:3))-...
    bsxfun(@times,d13,bH(:,1:3)));
  deriv1=sum(bsxfun(@times,deriv1,2*(c13.*a-d13.*b)./...
    d13.^8),1);
  grad=deriv1+(-8/3)*res*(dH(1,1:3)/dH(1));
  grad=grad';
end
end